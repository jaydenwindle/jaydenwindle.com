---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  imageAlt?: string;
  type?: 'website' | 'article' | 'profile';
  canonicalURL?: URL | string;
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  tags?: string[];
}

const {
  title,
  description = "hi, i'm jayden - i build software that maximizes individual sovereignty",
  image = "/android-chrome-512x512.png",
  imageAlt = "",
  type = "website",
  canonicalURL = new URL(Astro.url.pathname, Astro.site),
  publishedTime,
  modifiedTime,
  author = "Jayden Windle",
  tags = []
} = Astro.props;

const siteName = "Jayden Windle";
const twitterHandle = "@jayden_windle";

// Structured data based on type
let structuredData: any = {
  "@context": "https://schema.org"
};

if (type === 'website') {
  structuredData = {
    ...structuredData,
    "@type": "WebSite",
    name: siteName,
    url: canonicalURL,
    description: description,
    author: {
      "@type": "Person",
      name: author,
      sameAs: [
        "https://github.com/jaydenwindle",
        "https://twitter.com/jayden_windle",
      ]
    }
  };
} else if (type === 'article') {
  structuredData = {
    ...structuredData,
    "@type": "Article",
    headline: title,
    description: description,
    image: new URL(image, Astro.site),
    author: {
      "@type": "Person",
      name: author
    },
    publisher: {
      "@type": "Person",
      name: author
    },
    datePublished: publishedTime,
    dateModified: modifiedTime || publishedTime,
    mainEntityOfPage: {
      "@type": "WebPage",
      "@id": canonicalURL
    }
  };
} else if (type === 'profile') {
  structuredData = {
    ...structuredData,
    "@type": "Person",
    name: author,
    url: canonicalURL,
    sameAs: [
      "https://github.com/jaydenwindle",
      "https://twitter.com/jayden_windle", 
    ],
    jobTitle: "cto @ future primitive",
    description: description
  };
}
---

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="author" content={author} />
<meta name="generator" content={Astro.generator} />
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.site)} />
<meta property="og:image:alt" content={imageAlt} />
<meta property="og:site_name" content={siteName} />
<meta property="og:locale" content="en_US" />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.site)} />
<meta property="twitter:image:alt" content={imageAlt} />
<meta property="twitter:creator" content={twitterHandle} />
<meta property="twitter:site" content={twitterHandle} />

<!-- Article specific meta tags -->
{type === 'article' && publishedTime && (
  <meta property="article:published_time" content={publishedTime} />
)}
{type === 'article' && modifiedTime && (
  <meta property="article:modified_time" content={modifiedTime} />
)}
{type === 'article' && author && (
  <meta property="article:author" content={author} />
)}
{type === 'article' && tags.length > 0 && tags.map(tag => (
  <meta property="article:tag" content={tag} />
))}

<!-- Additional SEO -->
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />

<!-- Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
